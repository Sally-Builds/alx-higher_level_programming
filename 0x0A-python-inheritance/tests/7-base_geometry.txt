

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("sally", 90)
>>> bg.integer_validator("sally", "bro")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 21, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: sally must be an integer
>>> bg.integer_validator("sally", 9.2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 21, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: sally must be an integer
>>> bg.integer_validator("sally", -5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 23, in integer_validator
    raise ValueError(f"{name} must be greater than 0")
ValueError: sally must be greater than 0
>>> bg.integer_validator("sally", "inf")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 21, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: sally must be an integer
>>> bg.integer_validator("sally")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
